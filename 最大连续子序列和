/*
7
2 -4 3 -1 2 -4 3

4
*/

/*
最大字段和
数据范围2e5
*/
/*
#include <iostream>
#include <string>
#include <cstdio>
#include <cmath>
#include <algorithm>

using namespace std;
int n;
int b[200010];
int d[200010];
int main()
{
    cin>>n;
    d[0]=0;
    int Max=-10000000;
    for(int i=1;i<=n;i++)
    {
        cin>>b[i];
        if(d[i-1]>0)
            d[i]=d[i-1]+b[i];
        else
            d[i]=b[i];
        if(Max<d[i])Max=d[i];
    }
    cout<<Max<<endl;
    return 0;
}
*/

/*

 最大连续子序列和
 
 记录子段的初始位置和终止位置
 */
 
 /*
 #include <iostream>
 #include <cstdio>
 #include <string>
 #include <cstring>
 #include <cmath>
 #include <algorithm>

 using namespace std;
 int a[100001];
 long long dp[100001];
 int main()
 {
     int n;
     while(scanf("%d",&n)&&n!=0)
     {
         if(n==0)break;
         memset(a,0,sizeof(a));
         memset(dp,0,sizeof(dp));
         for(int i=0;i<n;i++)
         {
             cin>>a[i];dp[i]=0;
         }
         int ll=0,rr=0,k=0,Max=-10000;
         dp[0]=a[0];
         int l[10001],r[10001];
         for(int i=1;i<n;i++)
         {
             if(dp[i-1]>0)
             {
                 dp[i]=dp[i-1]+a[i];r[i]=i;l[i]=ll;
             }
             else{
                dp[i]=a[i];
                ll=i;
                l[i]=i;
                r[i]=i;
             }
             if(Max<dp[i])
             {
                 Max=dp[i];
                 k=i;
             }
         }
         if(Max>=0)
         cout<<Max<<' '<<a[l[k]]<<' '<<a[r[k]]<<endl;
         else{
             cout<<'0'<<' '<<a[0]<<' '<<a[n-1]<<endl;
         }
     }
     return 0;
 }
 
 
 */
