



/*
虚拟oj基础dp专题
A
最大M段和
1 3 1 2 3
6

2 6 -1 4 -2 3 -2 3
8

*/
/*
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>

typedef long long ll;
using namespace std;

ll a[1010011];
int dp[1010000],d[1010101];
int main()
{
    ll n,m; int mmax;
    while(scanf("%lld%lld",&m,&n)!=EOF)
    {
        memset(d,0,sizeof(d));
        memset(dp,0,sizeof(dp));
         memset(a,0,sizeof(a));
        for(long long i=1;i<=n;i++)
        {
            cin>>a[i];
        }
        for(long long i=1;i<=m;i++)
        {
             mmax=-10520035;
             for(long long j=i;j<=n;j++)
             {
                 dp[j]=max(dp[j-1]+a[j],d[j-1]+a[j]);
                 d[j-1]=mmax;
                 mmax=max(dp[j],mmax);
             }
        }
        cout<<mmax<<endl;
    }
    return 0;
}
